@prefix rdf:           <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:          <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:           <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:           <http://www.w3.org/2002/07/owl#> .
@prefix skos:          <http://www.w3.org/2004/02/skos/core#> .
@prefix prov:          <http://www.w3.org/ns/prov#> .
@prefix sio:           <http://semanticscience.org/resource/> .
@prefix dcat:          <http://www.w3.org/ns/dcat#> .
@prefix dcterms:       <http://purl.org/dc/terms/> .
@prefix void:          <http://rdfs.org/ns/void#> .
@prefix setl:          <http://purl.org/twc/vocab/setl/> .
@prefix csvw:          <http://www.w3.org/ns/csvw#> .
@prefix pv:            <http://purl.org/net/provenance/ns#> .
@prefix np:            <http://www.nanopub.org/nschema#> .
@prefix api_vocab: <http://purl.org/linked-data/api/vocab#>.
@prefix graph4code:              <http://purl.org/twc/graph4code/ontology/> .
@prefix :              <http://purl.org/twc/graph4code/setl/> .

:docstrings_file a setl:JSON;
  api_vocab:selector "item";
  prov:wasGeneratedBy [
    a setl:Extract;
    prov:used  </data/merge-15-22.2.format.json>;
  ].

:docstrings_import a setl:SemanticETLScript;
  rdfs:label "Graph4code Import SETL Script".

:uri_safe a owl:Class, prov:SoftwareAgent, setl:PythonScript;
    rdfs:subClassOf prov:Activity;
    prov:value '''
global parse
from urllib import parse
result = lambda x: parse.quote_plus(x.encode('utf8'), safe="/")
'''.


graph4code:docstrings_ontology a void:Dataset;
  prov:wasGeneratedBy :docstrings_import, [
    a setl:Transform, setl:JSLDT;
    prov:used :docstrings_file;
    prov:qualifiedUsage [ a prov:Usage; prov:entity :uri_safe; prov:hadRole [ dcterms:identifier "uri_safe"]];
    setl:hasContext '''{
    "sio" :     "http://semanticscience.org/resource/",
    "rdfs" :    "http://www.w3.org/2000/01/rdf-schema#",
    "rdf" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "skos" : "http://www.w3.org/2004/02/skos/core#",
    "xsd" : "http://www.w3.org/2001/XMLSchema#",
    "np":       "http://www.nanopub.org/nschema#",
    "dcterms":       "http://purl.org/dc/terms/",
    "graph4code":   "http://purl.org/twc/graph4code/",
    "owl" : "http://www.w3.org/2002/07/owl#",
    "comment": "rdfs:comment",
    "isa": {
      "@id":"rdfs:subClassOf",
      "@type":"@id"
    },
    "Property": "rdfs:Property",
    "Relation": "owl:ObjectProperty",
    "Attribute": "owl:DatatypeProperty",
    "AnnotationProperty": "owl:AnnotationProperty",
    "Transitive": "owl:TransitiveProperty",
    "Reflexive": "owl:ReflexiveProperty",
    "Irreflexive": "owl:IrreflexiveProperty",
    "Symmetric": "owl:SymmetricProperty",
    "Asymmetric": "owl:AsymmetricProperty",
    "Functional": "owl:FunctionalProperty",
    "InverseFunctional": "owl:InverseFunctionalProperty",
    "Class": "owl:Class",
    "Restriction": "owl:Restriction",
    "AllDifferent": "owl:AllDifferent",
    "Ontology": "owl:Ontology",
    "imports": {
      "@id": "owl:imports",
      "@type": "@id"
    },
    "value":"owl:hasValue",
    "distinct": {
      "@id": "owl:distinctMembers",
      "@type": "@id"
    },
    "distinct": {
      "@id": "owl:distinctMembers",
      "@type": "@id"
    },
    "definedBy": {
      "@id": "rdfs:isDefinedBy",
      "@type": "@id"
    },
    "subPropertyOf": {
      "@id": "rdfs:subPropertyOf",
      "@type": "@id"
    },
    "range": {
      "@id": "rdfs:range",
      "@type": "@id"
    },
    "domain": {
      "@id": "rdfs:domain",
      "@type": "@id"
    },
    "seeAlso": {
      "@id": "rdfs:seeAlso",
      "@type": "@id"
    },
    "label": {
      "@id": "rdfs:label"
    },
    "not" : {
      "@id":"owl:disjointWith",
      "@type":"@id"
    },
    "complement" : {
      "@id":"owl:complementOf",
      "@type":"@id"
    },
    "some" : {
      "@id":"owl:someValuesFrom",
      "@type":"@id"
    },
    "only" : {
      "@id":"owl:allValuesFrom",
      "@type":"@id"
    },
    "on" : {
      "@id":"owl:onProperty",
      "@type":"@id"
    },
    "inverse" : {
      "@id":"owl:inverseOf",
      "@type":"@id"
    },
    "equivalent" : {
      "@id":"owl:equivalentClass",
      "@type":"@id"
    },
    "and" : {
      "@id":"owl:intersectionOf",
      "@type":"@id",
      "@container":"@list"
    },
    "or" : {
      "@id":"owl:unionOf",
      "@type":"@id",
      "@container":"@list"
    },
    "key" : {
      "@id":"owl:hasKey",
      "@type":"@id",
      "@container":"@list"
    },
    "in": {
      "@id": "owl:oneOf",
      "@type": "@id",
      "@container": "@list"
    },
    "min": {
      "@id": "owl:minCardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "max": {
      "@id": "owl:maxCardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "minq": {
      "@id": "owl:minQualifiedCardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "maxq": {
      "@id": "owl:maxQualifiedCardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "exactq": {
      "@id": "owl:qualifiedCardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "exactly": {
      "@id": "owl:cardinality",
      "@type": "xsd:nonNegativeInteger"
    },
    "onClass": {
      "@id": "owl:onClass",
      "@type": "@id"
    },
    "hasSelf": {
      "@id": "owl:hasSelf",
      "@type": "xsd:boolean"
    },
    "prov":     "http://www.w3.org/ns/prov#"
}''';
    prov:value '''
[
  {
    "@id": "graph4code:python/{{uri_safe(row['module'])}}",
    "@if" : "row.get('module',False)",
    "@type": [ "graph4code:PythonModule" ],
    "rdfs:label" : "{{row['module']}}"
  },
  {
    "@if" : "row.get('module',False) and 'base_classes' in row",
    "@id": "graph4code:python/{{uri_safe(row['klass'])}}",
    "@type": [
      "graph4code:Class",
      "owl:Class"
    ],
    "isa" : [
      {
          "@for" : "c in row['base_classes']",
          "@do" : {
              "@id" : "graph4code:python/{{uri_safe(c)}}",
              "@type": [
                "graph4code:Class",
                "owl:Class"
              ]
          }
      }
    ],
    "dcterms:isPartOf": "graph4code:python/{{uri_safe(row['module'])}}",
    "rdfs:label" : "{{uri_safe(row['klass'].split('.')[-1])}}",
    "skos:definition" : { "@if" : "'class_docstring' in row", "@value" : "{{row['docstring']}}"},
    "skos:altLabel" : "{{uri_safe(row['klass'])}}"
  },
  {
    "@if" : "row.get('module',False) and 'base_classes' not in row and 'function' in row",
    "@id": "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}.{% endif %}{{uri_safe(row['function'])}}",
    "@type": [ "graph4code:Function", "owl:Class" ],
    "dcterms:isPartOf": [
      {
        "@id" : "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}{% endif %}"
      }
    ],
    "equivalent" : [
      {
          "@type" : "Restriction",
          "on" : "sio:SIO_000892",
          "some" : {
              "and" : [
                "graph4code:PositionalArgument",
                {
                    "@type" : "owl:Restriction",
                    "on" : "sio:SIO_000300",
                    "value" : 0
                },
                {
                    "@type" : "owl:Restriction",
                    "on" : "sio:SIO_000227",
                    "value" : { "@id" : "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}.{% endif %}{{uri_safe(row['function'])}}"}
                }
              ]
          }
      }
    ],
    "rdfs:subClassOf": [
      { "@id" : "sio:SIO_000006" },
      {
        "@if" : "'klass' in row",
        "@type" : "owl:Restriction",
        "on" : "sio:SIO_000230",
        "some" : {
            "and" : [
                { "@id" : "graph4code:python/{{uri_safe(row['klass'])}}"},
                {
                   "on" : "sio:SIO_000228",
                   "some" : {
                       "and" : [
                           { "@id" : "graph4code:PositionalArgument" },
                           {
                               "@type" : "owl:Restriction",
                               "on" : "sio:SIO_000300",
                               "value" : 1
                           },
                           {
                               "@type" : "owl:Restriction",
                               "on" : "sio:SIO_000227",
                               "only" : { "@id" : "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}.{% endif %}{{uri_safe(row['function'])}}"}
                           }
                       ]
                   }
               },
               {
                  "on" : "sio:SIO_000228",
                  "some" : {
                      "and" : [
                          { "@id" : "graph4code:NamedArgument" },
                          {
                              "@type" : "owl:Restriction",
                              "on" : "sio:SIO_000300",
                              "value" : "self"
                          },
                          {
                              "@type" : "owl:Restriction",
                              "on" : "sio:SIO_000227",
                              "only" : { "@id" : "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}.{% endif %}{{uri_safe(row['function'])}}"}
                          }
                      ]
                  }
               }
            ]
        }
      },
      {
        "@for" : "position, param in enumerate(row.get('param_names',[]), (2 if 'klass' in row else 1))",
        "@do" : {
            "@type" : "owl:Restriction",
            "on" : "sio:SIO_000230",
            "some" : {
                "@id" : "graph4code:python/{% if 'klass' in row %}{{uri_safe(row['klass'])}}.{% endif %}{{uri_safe(row['function'])}}.{{uri_safe(param)}}",
                "rdfs:label" : "{{param}}",
                "skos:definition" : [
                  {
                    "@if" : "'param_map' in row and param in row['param_map']",
                    "@value" : "{{row['param_map'][param]['param_doc']}}"
                  }
                ],
                "isa" : [
                    {
                        "on" : "sio:SIO_000228",
                        "some" : {
                            "and" : [
                                { "@id" : "graph4code:PositionalArgument" },
                                {
                                    "@type" : "owl:Restriction",
                                    "on" : "sio:SIO_000300",
                                    "value" : { "@value" : "{{position}}"}
                                },
                                {
                                    "@type" : "owl:Restriction",
                                    "on" : "sio:SIO_000227",
                                    "only" : { "@id" : "graph4code:python/{% if 'klass' in row %}.{{uri_safe(row['klass'])}}{% endif %}.{{uri_safe(row['function'])}}"}
                                }
                            ]
                        }
                    },
                    {
                        "on" : "sio:SIO_000228",
                        "some" : {
                            "and" : [
                                { "@id" : "graph4code:NamedArgument" },
                                {
                                    "@type" : "owl:Restriction",
                                    "on" : "sio:SIO_000300",
                                    "value" : "{{param}}"
                                },
                                {
                                    "@type" : "owl:Restriction",
                                    "on" : "sio:SIO_000227",
                                    "only" : { "@id" : "graph4code:python/{% if 'klass' in row %}.{{uri_safe(row['klass'])}}{% endif %}.{{uri_safe(row['function'])}}"}
                                }
                            ]
                        }
                    }
                ]
            }
        }
      }
    ],
    "sio:SIO_000300": "{{row['code']}}",
    "rdfs:label": "{% if 'klass' in row%}{{row['klass'].split('.')[-1]}}{% endif %}.{{row['function']}}",
    "skos:notation": "{{row['function']}}",
    "skos:definition": "{{row['docstring']}}",
    "skos:altLabel" : "{% if 'klass' in row%}.{{row['klass']}}{% endif %}"
  }
]'''].

<docstrings.nq.gz> a pv:File, setl:GZipFile;
    dcterms:format "application/n-quads";
    prov:wasGeneratedBy [
      a setl:Load;
      prov:used graph4code:docstrings_ontology ;
    ].
