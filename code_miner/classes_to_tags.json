{"lightgbm.sklearn.LGBMClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "lightgbm.sklearn.LGBMRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.calibration.CalibratedClassifierCV": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.cluster.birch.Birch": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.cluster.hierarchical.FeatureAgglomeration": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.cluster.k_means_.KMeans": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.cluster.k_means_.MiniBatchKMeans": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.compose._target.TransformedTargetRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.cross_decomposition.cca_.CCA": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}, {"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.cross_decomposition.pls_.PLSCanonical": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}, {"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.cross_decomposition.pls_.PLSRegression": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}, {"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.cross_decomposition.pls_.PLSSVD": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.dict_learning.DictionaryLearning": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.factor_analysis.FactorAnalysis": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.fastica_.FastICA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.incremental_pca.IncrementalPCA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.kernel_pca.KernelPCA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.nmf.NMF": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.online_lda.LatentDirichletAllocation": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.pca.PCA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.sparse_pca.MiniBatchSparsePCA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.sparse_pca.SparsePCA": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.decomposition.truncated_svd.TruncatedSVD": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}, {"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendProbaTransformer", "AppendProbaTransformer"]}], "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.ensemble.bagging.BaggingClassifier": [{"py/tuple": ["AI4MLEnsemble", "Ensemble"]}], "sklearn.ensemble.bagging.BaggingRegressor": [{"py/tuple": ["AI4MLEnsemble", "Ensemble"]}], "sklearn.ensemble.forest.ExtraTreesClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}, {"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendProbaTransformer", "AppendProbaTransformer"]}], "sklearn.ensemble.forest.ExtraTreesRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}, {"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.ensemble.forest.RandomForestClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}, {"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendProbaTransformer", "AppendProbaTransformer"]}], "sklearn.ensemble.forest.RandomForestRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}, {"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.ensemble.forest.RandomTreesEmbedding": [{"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.ensemble.iforest.IsolationForest": [{"py/tuple": ["SmallDataTransformer", "Transformer"]}, {"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.ensemble.weight_boosting.AdaBoostClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.ensemble.weight_boosting.AdaBoostRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.feature_selection.univariate_selection.GenericUnivariateSelect": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.univariate_selection.SelectFdr": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.univariate_selection.SelectFpr": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.univariate_selection.SelectFwe": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.univariate_selection.SelectKBest": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.univariate_selection.SelectPercentile": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.feature_selection.variance_threshold.VarianceThreshold": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.gaussian_process.gpc.GaussianProcessClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.gaussian_process.gpr.GaussianProcessRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.impute.MissingIndicator": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.impute.SimpleImputer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.kernel_approximation.AdditiveChi2Sampler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.kernel_approximation.Nystroem": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.kernel_approximation.RBFSampler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.kernel_approximation.SkewedChi2Sampler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.kernel_ridge.KernelRidge": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.base.LinearRegression": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.bayes.ARDRegression": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.bayes.BayesianRidge": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.ElasticNet": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.ElasticNetCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.Lasso": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.LassoCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.MultiTaskElasticNet": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.MultiTaskLasso": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.coordinate_descent.MultiTaskLassoCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.huber.HuberRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.least_angle.Lars": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.least_angle.LarsCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.least_angle.LassoLars": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.least_angle.LassoLarsCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.least_angle.LassoLarsIC": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.logistic.LogisticRegression": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.logistic.LogisticRegressionCV": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.omp.OrthogonalMatchingPursuit": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.omp.OrthogonalMatchingPursuitCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.perceptron.Perceptron": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.randomized_l1.RandomizedLasso": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.linear_model.randomized_l1.RandomizedLogisticRegression": [{"py/tuple": ["SmallDataFeatureSelector", "FSTransformer"]}], "sklearn.linear_model.ransac.RANSACRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.ridge.Ridge": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.ridge.RidgeCV": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.ridge.RidgeClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.ridge.RidgeClassifierCV": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.stochastic_gradient.SGDClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.linear_model.stochastic_gradient.SGDRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.linear_model.theil_sen.TheilSenRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.manifold.isomap.Isomap": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.manifold.locally_linear.LocallyLinearEmbedding": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.naive_bayes.BernoulliNB": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.naive_bayes.ComplementNB": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.naive_bayes.GaussianNB": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.naive_bayes.MultinomialNB": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.neighbors.classification.KNeighborsClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.neighbors.classification.RadiusNeighborsClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.neighbors.lof.LocalOutlierFactor": [{"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.neighbors.nearest_centroid.NearestCentroid": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.neighbors.regression.KNeighborsRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.neighbors.regression.RadiusNeighborsRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.neighbors.unsupervised.NearestNeighbors": [{"py/tuple": ["SmallDataAppendPredictionTransformer", "AppendPredictionTransformer"]}], "sklearn.neural_network.multilayer_perceptron.MLPClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.neural_network.multilayer_perceptron.MLPRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.neural_network.rbm.BernoulliRBM": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing._discretization.KBinsDiscretizer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing._encoders.OneHotEncoder": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing._encoders.OrdinalEncoder": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing._function_transformer.FunctionTransformer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.Binarizer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.MaxAbsScaler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.MinMaxScaler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.Normalizer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.PolynomialFeatures": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.PowerTransformer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.QuantileTransformer": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.RobustScaler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.data.StandardScaler": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.preprocessing.imputation.Imputer": [{"py/tuple": ["UNDESIGNATED", "no_suffix"]}], "sklearn.preprocessing.label.LabelBinarizer": [{"py/tuple": ["SmallDataLabelTransformer", "Transformer"]}], "sklearn.preprocessing.label.LabelEncoder": [{"py/tuple": ["SmallDataLabelTransformer", "Transformer"]}], "sklearn.preprocessing.label.MultiLabelBinarizer": [{"py/tuple": ["SmallDataLabelTransformer", "Transformer"]}], "sklearn.random_projection.GaussianRandomProjection": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.random_projection.SparseRandomProjection": [{"py/tuple": ["SmallDataObjectTransformer", "Transformer"]}], "sklearn.semi_supervised.label_propagation.LabelPropagation": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.semi_supervised.label_propagation.LabelSpreading": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.svm.classes.LinearSVC": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.svm.classes.LinearSVR": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.svm.classes.NuSVC": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.svm.classes.NuSVR": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.svm.classes.SVC": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.svm.classes.SVR": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "sklearn.tree.tree.DecisionTreeClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "sklearn.tree.tree.DecisionTreeRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}], "xgboost.sklearn.XGBClassifier": [{"py/tuple": ["SmallDataClassifier", "Estimator"]}], "xgboost.sklearn.XGBRegressor": [{"py/tuple": ["SmallDataRegressor", "Estimator"]}]}